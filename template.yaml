AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  stori-flow

  Sample SAM Template for stori-flow

Globals:
  Function:
    Tracing: Active
    Timeout: 300
    Policies:
    - DynamoDBCrudPolicy:
      TableName: !Ref AccountTable
    Environment:
      Variables:
        TABLE_NAME: account-table
        BUCKET: transactions-bucket
  Api:
    TracingEnabled: True

Resources:
  TransactionsBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: transactions-bucket
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true

  StoriFlowStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/stori_flow.asl.json
      DefinitionSubstitutions:
        ProcessDataFunctionArn: !GetAtt ProcessDataFunction.Arn
        GetDataFunctionArn: !GetAtt GetDataFunction.Arn
        SendEmailFunctionArn: !GetAtt SendEmailFunction.Arn
      Events:
        StateChange:
          Type: EventBridgeRule
          Properties:
            EventBusName: default
            Pattern:
              source:
                - aws.s3
              detail-type:
                - Object Created
              detail:
                bucket:
                  name:
                    - !Ref TransactionsBucket
      Policies:
        - RekognitionDetectOnlyPolicy: {}
        - S3ReadPolicy:
            BucketName: !Ref TransactionsBucket
        - LambdaInvokePolicy:
            FunctionName: !Ref ProcessDataFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref GetDataFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref SendEmailFunction

  ProcessDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/process_data/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64

  GetDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get_data/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64

  SendEmailFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/send_email/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64

  AccountTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: account-table
      PrimaryKey:
        Name: Id
        Type: Number
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

Outputs:
  StoriFlowStateMachineArn:
    Description: "Stori Flow State machine ARN"
    Value: !Ref StoriFlowStateMachine
  StoriFlowStateMachineRoleArn:
    Description: "IAM Role created for Stori Flow State machine based on the specified SAM Policy Templates"
    Value: !GetAtt StoriFlowStateMachineRole.Arn
